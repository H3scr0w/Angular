{
  "name": "@delivery/telecom",
  "version": "1.2.2-RC",
  "license": "UNLICENSED",
  "author": "Saint-Gobain DSI Group - Digital Solutions",
  "scripts":   {
    "build": "yarn run env -s && ng build",
    "start:mock": "ts-node --skip-project ./mocking-server/index.ts",
    "fix-memory-limit": "cross-env LIMIT=2048 increase-memory-limit",
    "generate": "ng generate",
    "build:sirene:uat": "yarn run env:sirene -s && ng build --prod --project=sirene --configuration=uat --build-optimizer --vendor-chunk --common-chunk",
    "build:sirene:prod": "yarn run env:sirene -s && ng build --prod --project=sirene --build-optimizer --vendor-chunk --common-chunk",
    "build:sirene:ci": "yarn test:sirene:ci && yarn reports:sirene:doc && yarn reports:sirene:wp",
    "start:sirene": "npm-run-all -p -r start:sirene:local start:mock",
    "start:sirene:es5": "npm-run-all -p -r start:sirene:local:es5 start:mock",
    "start:sirene:local": "ng serve --project=sirene --proxy-config projects/sirene/proxy.conf.js",
    "start:sirene:local:es5": "ng serve --project=sirene --proxy-config projects/sirene/proxy.conf.js --configuration es5",
    "start:sirene:server": "ng serve --project=sirene --proxy-config projects/sirene/proxy.server.conf.js --configuration server",
    "start:sirene:server:es5": "ng serve --project=sirene --proxy-config projects/sirene/proxy.server.conf.js --configuration server-es5",
    "lint:sirene": "ng lint --project=sirene --type-check --fix && stylelint \"projects/sirene/src/**/*.scss\" --syntax scss && htmlhint \"projects/sirene/src\" --config .htmlhintrc",
    "test:sirene": "jest --coverage --logHeapUsage -w=2 --config projects/sirene/src/jest.conf.js",
    "test:sirene:ci": "yarn run lint:sirene -s && jest --coverage --logHeapUsage -w=2 --config projects/sirene/src/jest.conf.js",
    "push:sirene": "yarn prettify:sirene && yarn lint:sirene",
    "e2e:sirene": "ng e2e --project=sirene",
    "translations:sirene:extract": "ngx-translate-extract --input projects/sirene/src --output projects/sirene/src/translations/template.json --format=json --clean -sort --marker extract",
    "prettify:sirene": "prettier --config ./.prettierrc --write \"projects/sirene/src/**/*{.ts,.js,.json,.css,.scss}\"",
    "env:sirene": "ngx-scripts env npm_package_version --out projects/sirene/src/environments/.env.ts",
    "reports:sirene:doc": "compodoc -p projects/sirene/tsconfig.app.json -d reports/sirene/documentation",
    "reports:sirene:wp": "yarn run build:sirene:prod --stats-json && webpack-bundle-analyzer dist/sirene/stats-es2015.json dist/sirene -m static -r reports/sirene/bundles/index.html",
    "build:delivery-organizer:uat": "yarn run env:delivery-organizer -s && ng build --prod --project=delivery-organizer --configuration=uat --build-optimizer --vendor-chunk --common-chunk",
    "build:delivery-organizer:prod": "yarn run env:delivery-organizer -s && ng build --prod --project=delivery-organizer --build-optimizer --vendor-chunk --common-chunk",
    "build:delivery-organizer:ci": "yarn test:delivery-organizer:ci && yarn reports:delivery-organizer:doc && yarn reports:delivery-organizer:wp",
    "start:delivery-organizer": "npm-run-all -p -r start:delivery-organizer:local start:mock",
    "start:delivery-organizer:es5": "npm-run-all -p -r start:delivery-organizer:local:es5 start:mock",
    "start:delivery-organizer:local": "ng serve --project=delivery-organizer --proxy-config projects/delivery-organizer/proxy.conf.js",
    "start:delivery-organizer:local:es5": "ng serve --project=delivery-organizer --proxy-config projects/delivery-organizer/proxy.conf.js --configuration es5",
    "start:delivery-organizer:server": "ng serve --project=delivery-organizer --proxy-config projects/delivery-organizer/proxy.server.conf.js --configuration server",
    "start:delivery-organizer:server:es5": "ng serve --project=delivery-organizer --proxy-config projects/delivery-organizer/proxy.server.conf.js --configuration server-es5",
    "lint:delivery-organizer": "ng lint --project=delivery-organizer --type-check --fix && stylelint \"projects/delivery-organizer/src/**/*.scss\" --syntax scss && htmlhint \"projects/delivery-organizer/src\" --config .htmlhintrc",
    "test:delivery-organizer": "jest --coverage --logHeapUsage -w=2 --config projects/delivery-organizer/src/jest.conf.js",
    "test:delivery-organizer:ci": "yarn run lint:delivery-organizer -s && jest --coverage --logHeapUsage -w=2 --config projects/delivery-organizer/src/jest.conf.js",
    "push:delivery-organizer": "yarn prettify:delivery-organizer && yarn lint:delivery-organizer",
    "e2e:delivery-organizer": "ng e2e --project=delivery-organizer",
    "translations:delivery-organizer:extract": "ngx-translate-extract --input projects/delivery-organizer/src --output projects/delivery-organizer/src/translations/template.json --format=json --clean -sort --marker extract",
    "prettify:delivery-organizer": "prettier --config ./.prettierrc --write \"projects/delivery-organizer/src/**/*{.ts,.js,.json,.css,.scss}\"",
    "env:delivery-organizer": "ngx-scripts env npm_package_version --out projects/delivery-organizer/src/environments/.env.ts",
    "reports:delivery-organizer:doc": "compodoc -p projects/delivery-organizer/tsconfig.app.json -d reports/delivery-organizer/documentation",
    "reports:delivery-organizer:wp": "yarn run build:delivery-organizer:prod --stats-json && webpack-bundle-analyzer dist/delivery-organizer/stats-es2015.json dist/delivery-organizer -m static -r reports/delivery-organizer/bundles/index.html",
    "build:spo:uat": "yarn run env:spo -s && ng build --prod --project=spo --configuration=uat --build-optimizer --vendor-chunk --common-chunk",
    "build:spo:prod": "yarn run env:spo -s && ng build --prod --project=spo --build-optimizer --vendor-chunk --common-chunk",
    "build:spo:ci": "yarn test:spo:ci && yarn reports:spo:doc && yarn reports:spo:wp",
    "start:spo": "npm-run-all -p -r start:spo:local start:mock",
    "start:spo:es5": "npm-run-all -p -r start:spo:local:es5 start:mock",
    "start:spo:local": "ng serve --project=spo --proxy-config projects/spo/proxy.conf.js",
    "start:spo:local:es5": "ng serve --project=spo --proxy-config projects/spo/proxy.conf.js --configuration es5",
    "start:spo:server": "ng serve --project=spo --proxy-config projects/spo/proxy.server.conf.js --configuration server",
    "start:spo:server:es5": "ng serve --project=spo --proxy-config projects/spo/proxy.server.conf.js --configuration server-es5",
    "lint:spo": "ng lint --project=spo --type-check --fix && stylelint \"projects/spo/src/**/*.scss\" --syntax scss && htmlhint \"projects/spo/src\" --config .htmlhintrc",
    "test:spo": "jest --coverage --logHeapUsage -w=2 --config projects/spo/src/jest.conf.js",
    "test:spo:ci": "yarn run lint:spo -s && jest --coverage --logHeapUsage -w=2 --config projects/spo/src/jest.conf.js",
    "push:spo": "yarn prettify:spo && yarn lint:spo",
    "e2e:spo": "ng e2e --project=spo",
    "translations:spo:extract": "ngx-translate-extract --input projects/spo/src --output projects/spo/src/translations/template.json --format=json --clean -sort --marker extract",
    "prettify:spo": "prettier --config ./.prettierrc --write \"projects/spo/src/**/*{.ts,.js,.json,.css,.scss}\"",
    "env:spo": "ngx-scripts env npm_package_version --out projects/spo/src/environments/.env.ts",
    "reports:spo:doc": "compodoc -p projects/spo/tsconfig.app.json -d reports/spo/documentation",
    "reports:spo:wp": "yarn run build:spo:prod --stats-json && webpack-bundle-analyzer dist/spo/stats-es2015.json dist/spo -m static -r reports/spo/bundles/index.html",
    "build:tempo:uat": "yarn run env:tempo -s && ng build --prod --project=tempo --configuration=uat --build-optimizer --vendor-chunk --common-chunk",
    "build:tempo:prod": "yarn run env:tempo -s && ng build --prod --project=tempo --build-optimizer --vendor-chunk --common-chunk",
    "build:tempo:ci": "yarn test:tempo:ci && yarn reports:tempo:doc && yarn reports:tempo:wp",
    "start:tempo": "npm-run-all -p -r start:tempo:local start:mock",
    "start:tempo:es5": "npm-run-all -p -r start:tempo:local:es5 start:mock",
    "start:tempo:local": "ng serve --project=tempo --proxy-config projects/tempo/proxy.conf.js",
    "start:tempo:local:es5": "ng serve --project=tempo --proxy-config projects/tempo/proxy.conf.js --configuration es5",
    "start:tempo:server": "ng serve --project=tempo --proxy-config projects/tempo/proxy.server.conf.js --configuration server",
    "start:tempo:server:es5": "ng serve --project=tempo --proxy-config projects/tempo/proxy.server.conf.js --configuration server-es5",
    "lint:tempo": "ng lint --project=tempo --type-check --fix && stylelint \"projects/tempo/src/**/*.scss\" --syntax scss && htmlhint \"projects/tempo/src\" --config .htmlhintrc",
    "test:tempo": "jest --coverage --logHeapUsage -w=2 --config projects/tempo/src/jest.conf.js",
    "test:tempo:ci": "yarn run lint:tempo -s && jest --coverage --logHeapUsage -w=2 --config projects/tempo/src/jest.conf.js",
    "push:tempo": "yarn prettify:tempo && yarn lint:tempo",
    "e2e:tempo": "ng e2e --project=tempo",
    "translations:tempo:extract": "ngx-translate-extract --input projects/tempo/src --output projects/tempo/src/translations/template.json --format=json --clean -sort --marker extract",
    "prettify:tempo": "prettier --config ./.prettierrc --write \"projects/tempo/src/**/*{.ts,.js,.json,.css,.scss}\"",
    "env:tempo": "ngx-scripts env npm_package_version --out projects/tempo/src/environments/.env.ts",
    "reports:tempo:doc": "compodoc -p projects/tempo/tsconfig.app.json -d reports/tempo/documentation",
    "reports:tempo:wp": "yarn run build:tempo:prod --stats-json && webpack-bundle-analyzer dist/tempo/stats-es2015.json dist/tempo -m static -r reports/tempo/bundles/index.html",
    "build:tom2:uat": "yarn run env:tom2 -s && ng build --prod --project=tom2 --configuration=uat --build-optimizer --vendor-chunk --common-chunk",
    "build:tom2:prod": "yarn run env:tom2 -s && ng build --prod --project=tom2 --build-optimizer --vendor-chunk --common-chunk",
    "build:tom2:ci": "yarn test:tom2:ci && yarn reports:tom2:doc && yarn reports:tom2:wp",
    "start:tom2": "npm-run-all -p -r start:tom2:local start:mock",
    "start:tom2:es5": "npm-run-all -p -r start:tom2:local:es5 start:mock",
    "start:tom2:local": "ng serve --project=tom2 --proxy-config projects/tom2/proxy.conf.js",
    "start:tom2:local:es5": "ng serve --project=tom2 --proxy-config projects/tom2/proxy.conf.js --configuration es5",
    "start:tom2:server": "ng serve --project=tom2 --proxy-config projects/tom2/proxy.server.conf.js --configuration server",
    "start:tom2:server:es5": "ng serve --project=tom2 --proxy-config projects/tom2/proxy.server.conf.js --configuration server-es5",
    "lint:tom2": "ng lint --project=tom2 --type-check --fix && stylelint \"projects/tom2/src/**/*.scss\" --syntax scss && htmlhint \"projects/tom2/src\" --config .htmlhintrc",
    "test:tom2": "jest --coverage --logHeapUsage -w=2 --config projects/tom2/src/jest.conf.js",
    "test:tom2:ci": "yarn run lint:tom2 -s && jest --coverage --logHeapUsage -w=2 --config projects/tom2/src/jest.conf.js",
    "push:tom2": "yarn prettify:tom2 && yarn lint:tom2",
    "e2e:tom2": "ng e2e --project=tom2",
    "translations:tom2:extract": "ngx-translate-extract --input projects/tom2/src --output projects/tom2/src/translations/template.json --format=json --clean -sort --marker extract",
    "prettify:tom2": "prettier --config ./.prettierrc --write \"projects/tom2/src/**/*{.ts,.js,.json,.css,.scss}\"",
    "env:tom2": "ngx-scripts env npm_package_version --out projects/tom2/src/environments/.env.ts",
    "reports:tom2:doc": "compodoc -p projects/tom2/tsconfig.app.json -d reports/tom2/documentation",
    "reports:tom2:wp": "yarn run build:tom2:prod --stats-json && webpack-bundle-analyzer dist/tom2/stats-es2015.json dist/tom2 -m static -r reports/tom2/bundles/index.html",
    "changelog": "auto-changelog --template changelog-template.hbs -p -u --commit-limit false --commit-url https://cerebro.digital-solutions.saint-gobain.com/delivery/telecom/telecom-ui/commit/{id}",
    "sonar-scanner": "node_modules/sonar-scanner/bin/sonar-scanner scan -X -Dsonar.host.url=https://mantis.digital-solutions.saint-gobain.com"
  },
  "dependencies":   {
    "@angular/animations": "^9.0.7",
    "@angular/cdk": "^9.1.3",
    "@angular/common": "^9.0.7",
    "@angular/compiler": "^9.0.7",
    "@angular/core": "^9.0.7",
    "@angular/forms": "^9.0.7",
    "@angular/material": "^9.1.3",
    "@angular/material-moment-adapter": "^9.1.3",
    "@angular/platform-browser": "^9.0.7",
    "@angular/platform-browser-dynamic": "^9.0.7",
    "@angular/router": "^9.0.7",
    "@delivery/eworkplace": "^1.6.0",
    "@delivery/stgo-common": "^2.0.0",
    "@ng-select/ng-select": "^3.7.3",
    "@ngrx/effects": "^9.0.0",
    "@ngrx/store": "^9.0.0",
    "@ngx-translate/core": "^12.1.1",
    "atob": "^2.1.2",
    "browser-detect": "^0.2.28",
    "core-js": "^3.6.4",
    "file-saver": "^2.0.2",
    "jwt-decode": "^2.2.0",
    "lodash-es": "^4.17.15",
    "moment": "^2.24.0",
    "ngx-quill": "^8.0.0",
    "pako": "^1.0.11",
    "quill": "^1.3.7",
    "rxjs": "^6.5.2",
    "tslib": "^1.10.0",
    "web-animations-js": "^2.3.2",
    "zone.js": "~0.10.3"
  },
  "devDependencies":   {
    "@angular-devkit/build-angular": "~0.900.7",
    "@angular/cli": "^9.0.7",
    "@angular/compiler-cli": "^9.0.7",
    "@angular/language-service": "^9.0.7",
    "@biesbjerg/ngx-translate-extract": "^4.2.0",
    "@compodoc/compodoc": "^1.1.11",
    "@ngx-rocket/scripts": "^2.2.0",
    "@types/file-saver": "^2.0.1",
    "@types/jasmine": "^3.5.4",
    "@types/lodash-es": "^4.17.3",
    "@types/node": "^12.11.1",
    "@types/pako": "^1.0.1",
    "auto-changelog": "^1.16.2",
    "codelyzer": "^5.1.2",
    "cross-env": "^7.0.0",
    "fs-finder": "^1.8.1",
    "htmlhint": "^0.11.0",
    "jest": "^24.9.0",
    "jest-preset-angular": "^8.0.0",
    "jest-sonar-reporter": "^2.0.0",
    "json-concat": "^0.0.1",
    "json-server": "^0.16.0",
    "npm-run-all": "^4.1.5",
    "parent-module": "^2.0.0",
    "prettier": "^1.19.1",
    "protractor": "^5.4.3",
    "require-glob": "^3.2.0",
    "sonar-scanner": "^3.1.0",
    "stylelint": "^13.2.0",
    "stylelint-config-recommended-scss": "^4.2.0",
    "stylelint-config-standard": "^20.0.0",
    "stylelint-scss": "^3.14.2",
    "ts-node": "^8.6.2",
    "tslint": "^5.20.1",
    "tslint-eslint-rules": "^5.4.0",
    "typescript": "~3.7.5",
    "webpack-bundle-analyzer": "^3.6.0"
  },
  "jestSonar": {"env":   {
    "sirene":     {
      "reportPath": "./reports/sirene/test-results/jest",
      "reportFile": "TESTS-results.xml"
    },
    "delivery-organizer":     {
      "reportPath": "./reports/delivery-organizer/test-results/jest",
      "reportFile": "TESTS-results.xml"
    },
    "spo":     {
      "reportPath": "./reports/spo/test-results/jest",
      "reportFile": "TESTS-results.xml"
    },
    "tempo":     {
      "reportPath": "./reports/tempo/test-results/jest",
      "reportFile": "TESTS-results.xml"
    },
    "tom2":     {
      "reportPath": "./reports/tom2/test-results/jest",
      "reportFile": "TESTS-results.xml"
    }
  }},
  "publishConfig": {"registry": "https://bishop.digital-solutions.saint-gobain.com/repository/npm-internal/"}
}